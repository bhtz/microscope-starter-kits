version: '3.6'
services:
  postgres:
    image: postgres:12
    ports:
    - "5432:5432"
    restart: always
    volumes:
    - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_DB: postgres
  graphql-engine:
    image: hasura/graphql-engine:v1.3.0.cli-migrations
    ports:
    - "8080:8000"
    depends_on:
    - "postgres"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:root@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: microscope
      HASURA_GRAPHQL_SERVER_PORT: 8000
      HASURA_GRAPHQL_AUTH_HOOK: http://host.docker.internal:5000/api/auth
  microscope:
    image: microscope
    ports:
    - "5000:80"
    depends_on:
      - "postgres"
    restart: always
    environment:
      ASPNETCORE_ENVIRONMENT: Production
    volumes:
      - type: bind
        source: ./config/appsettings.Development.json
        target: /app/appsettings.Development.json
      - type: bind
        source: ./config/appsettings.Staging.json
        target: /app/appsettings.Staging.json
      - type: bind
        source: ./config/appsettings.Production.json
        target: /app/appsettings.Production.json
volumes:
  db_data: